# REQUIREMENT
#PARA_LEVEL_DATA_FOR_AUTOMATION.csv for all shows

# create a master data set

import pandas as pd
import re
from nltk import sent_tokenize
from nltk import word_tokenize
from nltk import pos_tag

import glob
import os
def APPEND_PARALEVEL_DATA():
    path = 'D:/star/8 emotions/para level'
    extension = 'csv'
    os.chdir(path)
    
    files=[i for i in glob.glob('*.{}'.format(extension))  if i.find('PARA')>-1]
    
    df['Show_name']=files[6].replace('PARA_LEVEL_DATA_FOR_AUTOMATION_','').replace('.csv','')
    
    cols_to_keep=['Date','Day of week','Week_day','Para no.','Para length','Summary_telly','Show_name']
    
    master=pd.DataFrame(columns=cols_to_keep)

    for i in files:
        df=pd.read_csv(i,encoding='utf-8')
        df['Show_name']=i.replace('PARA_LEVEL_DATA_FOR_AUTOMATION_','').replace('.csv','')
        master=master.append(df,ignore_index=True)
    return master

#APPEND_PARALEVEL_DATA()


def data_TokenizationAndTagging(text):
        
        sentences = sent_tokenize(text)
        tokenized_sentences = [word_tokenize(word)for word in sentences]
        tagged_sentence = [pos_tag(words) for words in tokenized_sentences]
        
        return tagged_sentence
    
    def create_data_with_nouns_N_verbs(dataframe):
        
    
        list_of_objects_to_keep = ["NN","NNS","VB","VBZ","VBD","VBG","VBN","VBP",",",".","?","!"]
        print 'working'
        for row_num,text in enumerate(dataframe['Summary_telly']):
            
  
            text_mod = re.sub(' +',' ',text)
            tagged_sentences = data_TokenizationAndTagging(text=text_mod)
            
            temp_text = []
            
            for sentence in tagged_sentences:
    
                for word_tag in sentence:
                    
                    if word_tag[1] in list_of_objects_to_keep:
                         temp_text.append(word_tag[0])
                         
            sent_mod = " ".join(temp_text)
            
            dataframe.loc[row_num,"Summary_modified"] = sent_mod
        
        dataframe.to_csv("PARA_LEVEL_DATA_FOR_AUTOMATION_with_verbs_and_Nouns.csv",index=False,encoding="utf-8")
        
create_data_with_nouns_N_verbs(master)
